// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FriendsPage renders correctly 1`] = `
<RCTSafeAreaView
  style={
    [
      {
        "flex": 1,
      },
      {
        "backgroundColor": "#FFFFFF",
      },
    ]
  }
>
  <View
    style={
      [
        {
          "flex": 1,
        },
        {
          "backgroundColor": "#FFFFFF",
        },
      ]
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-between",
            "paddingHorizontal": 15,
            "paddingVertical": 10,
          },
          {
            "backgroundColor": "#ebebeb",
          },
        ]
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 40,
            "borderWidth": 3,
            "opacity": 1,
            "padding": 8,
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#000",
                "fontSize": 18,
                "fontWeight": "bold",
                "marginRight": 15,
              },
              {
                "marginLeft": 20,
              },
            ]
          }
        >
          Back
        </Text>
      </View>
      <Text
        style={
          {
            "color": "#000",
            "fontSize": 20,
            "fontWeight": "bold",
          }
        }
      >
        Friends
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "backgroundColor": "#FFFFFF",
            "borderRadius": 40,
            "borderWidth": 3,
            "opacity": 1,
            "paddingHorizontal": 10,
            "paddingVertical": 5,
          }
        }
      >
        <Text
          style={
            {
              "color": "#000",
              "fontSize": 18,
              "fontWeight": "bold",
              "marginLeft": 10,
              "marginRight": 10,
            }
          }
        >
          Add Friend
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "borderBottomWidth": 1,
          "borderColor": "#CCCCCC",
          "flexDirection": "row",
          "justifyContent": "space-evenly",
          "paddingVertical": 10,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "borderBottomWidth": 2,
            "borderColor": "#000",
            "opacity": 1,
            "padding": 10,
          }
        }
      >
        <Text
          style={
            [
              {
                "color": "#000",
                "fontSize": 18,
              },
              {
                "color": "#000",
                "fontWeight": "bold",
              },
            ]
          }
        >
          My Friends
        </Text>
      </View>
    </View>
    <View
      style={
        {
          "paddingHorizontal": 10,
          "paddingVertical": 5,
        }
      }
    >
      <TextInput
        onChangeText={[Function]}
        placeholder="Search friends"
        style={
          {
            "backgroundColor": "#F5F5F5",
            "borderRadius": 5,
            "fontSize": 18,
            "height": 40,
            "paddingHorizontal": 10,
          }
        }
        value=""
      />
    </View>
    <RCTScrollView
      contentContainerStyle={
        {
          "paddingBottom": 20,
          "paddingHorizontal": 10,
        }
      }
      data={[]}
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={0.0001}
      stickyHeaderIndices={[]}
      viewabilityConfigCallbackPairs={[]}
    >
      <View />
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;
